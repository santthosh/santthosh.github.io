<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[errands.io]]></title>
  <link href="http://santthosh.github.io/atom.xml" rel="self"/>
  <link href="http://santthosh.github.io/"/>
  <updated>2013-09-20T15:11:01-07:00</updated>
  <id>http://santthosh.github.io/</id>
  <author>
    <name><![CDATA[Santthosh]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using deferred update with local storage in AngularJS]]></title>
    <link href="http://santthosh.github.io/blog/2013/09/20/using-deferred-update-with-localstorage-in-angularjs/"/>
    <updated>2013-09-20T10:33:00-07:00</updated>
    <id>http://santthosh.github.io/blog/2013/09/20/using-deferred-update-with-localstorage-in-angularjs</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve always used client side caching (when possible and applicable) to provide a responsive UI to end users, especially on mobile applications. Lately, have been checking out the AngularJS framework but couldn&rsquo;t find examples on how to implement this technique. Definitely <a href="http://www.breezejs.com/">breeze.js</a> works out well, but I wanted something lightweight and easy to use without all the entity framework stuff.</p>

<p>My main concern was that <code>$q</code> doesn&rsquo;t have something like a <code>notify()</code> method. Recently, I stumbled on <a href="http://www.bennadel.com/blog/2431-Resolving-An-AngularJS-Deferred-Object-Twice-With-DeferredWithUpdate-js.htm">Ben Nadel&rsquo;s work on DeferredWithUpdate.js</a>. He has nicely wrapped up the promise / deferred implementation (<code>$q</code> class) with additional <code>update()</code> and <code>mistake()</code> methods.</p>

<p>I have pieced in a project that uses his deferred implementation with angular-local-storage to demonstrate how powerful this can be, here is the <a href="https://github.com/santthosh/angular-cached-demo">github link</a>. Take a look at the <a href="https://github.com/santthosh/angular-cached-demo/blob/master/app/scripts/services/recentPostsService.js">recentPostsService.js</a>, which fetches the recent posts from Lithosphere (Lithium&rsquo;s community portal). Here we use <code>DeferredUpdateModule</code> instead of <code>$q</code> and magic happens in these lines</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'>  <span class="nx">posts</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">request</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">response</span><span class="p">)</span> <span class="p">{</span>            <span class="c1">// dispatch the api call</span>
</span><span class='line'>                                                      <span class="c1">// when server returns with response</span>
</span><span class='line'>    <span class="nx">localStorageService</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="s1">&#39;recent&#39;</span><span class="p">,</span><span class="nx">response</span><span class="p">);</span>       <span class="c1">//   add response to local storage</span>
</span><span class='line'>    <span class="nx">deferred</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">response</span><span class="p">);</span>                       <span class="c1">//   resolve previously deferred response object</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>                                                      <span class="c1">// but we don&#39;t have to wait for API response now!</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">response</span> <span class="o">=</span> <span class="nx">localStorageService</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;recent&#39;</span><span class="p">);</span>   <span class="c1">//    check the local storage for a cache</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="nx">response</span> <span class="o">!=</span> <span class="kc">undefined</span><span class="p">)</span>  <span class="p">{</span>                        <span class="c1">//    if present</span>
</span><span class='line'>    <span class="nx">deferred</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">response</span><span class="p">);</span>                       <span class="c1">//        just resolve it right now,</span>
</span><span class='line'>  <span class="p">}</span>                                                   <span class="c1">//        server response will come and overwrite it</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="nx">promise</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>You can play around with the <a href="http://angular-cached-demo.herokuapp.com/#/">working prototype here</a>. With all the awesomeness of AngularJS, changes to your services will be trivial and there won&rsquo;t be any changes to your controllers. Also here is a quick demo of the experience</p>

<div align="center">
<iframe width="420" height="315" src="http://santthosh.github.io//www.youtube.com/embed/9HTKHMXxsjs" frameborder="0" allowfullscreen></iframe>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[hello world]]></title>
    <link href="http://santthosh.github.io/blog/2013/07/12/hello-world/"/>
    <updated>2013-07-12T23:58:00-07:00</updated>
    <id>http://santthosh.github.io/blog/2013/07/12/hello-world</id>
    <content type="html"><![CDATA[<p>I have been a native application developer (iOS, Android, Mac, .NET, Java) for some time now, high time I start focusing on web technologies, especially mobile web. I know what you are thinking, but here is my strategy</p>

<blockquote><p>Continuous effort - not strength or intelligence - is the key to unlocking our potential.</p><footer><strong>Winston Churchill</strong></footer></blockquote>


<p></p>

<p>This is going to be my play ground for web technologies, I&rsquo;m going to share my thoughts all along the way, feel free to comment, shout out, scream, scold or make fun</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="cp">&lt;!DOCTYPE html&gt;</span>
</span><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'>  <span class="nt">&lt;head&gt;</span>
</span><span class='line'>      <span class="nt">&lt;script&gt;</span>
</span><span class='line'>          <span class="kd">function</span> <span class="nx">helloWorldFunction</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">alert</span><span class="p">(</span><span class="s2">&quot;Hello World&quot;</span><span class="p">);</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="nt">&lt;/script&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/head&gt;</span>
</span><span class='line'>  <span class="nt">&lt;body&gt;</span>
</span><span class='line'>      <span class="nt">&lt;button</span> <span class="na">onClick=</span><span class="s">&quot;helloWorldFunction()&quot;</span><span class="nt">&gt;</span>Try Me<span class="nt">&lt;/button&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Cheers, Santthosh</p>
]]></content>
  </entry>
  
</feed>
</span></code></pre></td></tr></table></div></figure>


<p>Cheers, Santthosh</p>
]]></content>
  </entry>
  
</feed>
